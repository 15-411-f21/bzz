name: Build
on:
  push:
  release:
    types: [created]


jobs:
  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Fetch Libraries
        shell: cmd
        run: |
          python .github/workflows/download-file.py https://github.com/15-466/nest-libs/releases/download/v0.3-pre1/nest-libs-windows-v0.3-pre1.zip ../nest-libs.zip
          "C:\\Program Files\\7-Zip\\7z.exe" x -o.. nest-libs.zip
          cd ..
          dir /w
      - name: Build Code
        shell: cmd
        run: |
          dir/w
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          "nest_libs\windows\jam\jam.exe" JAM_TOOLSET=VISUALC -j3 -q
          dir/w
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
      - name: Package (Release)
        if: github.event_name == 'release'
        shell: cmd
        run: |
          copy README.md dist
          rename dist "game0-%TAG_NAME%"
          "C:\Program Files\7-Zip\7z.exe" a -r "game0-%TAG_NAME%.zip" "game0-%TAG_NAME%"
          dir/w
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
      - name: Upload Result
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: hack-stitch-faces-windows-${{ github.event.release.tag_name }}.zip
          asset_name: hack-stitch-faces-windows-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Fetch Libraries
        shell: bash
        run: |
          pwd
          cd ..
          wget https://github.com/15-466/nest-libs/releases/download/v0.3-pre1/nest-libs-linux-v0.3-pre1.tar.gz -Onest-libs.tar.gz
          tar xfz nest-libs.tar.gz
          ls nest-libs
          pwd
      - name: Build Code
        shell: bash
        run: |
          pwd
          sudo apt-get update
          sudo apt-get install ftjam
          jam -j3 -q
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
      - name: Package
        shell: bash
        run: |
          cp README.md dist
          mv dist "hack-stitch-faces-linux-$TAG_NAME"
          tar cfz "hack-stitch-faces-linux-$TAG_NAME"".tar.gz" "hack-stitch-faces-linux-$TAG_NAME"
          ls
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: hack-stitch-faces-linux-
          path: hack-stitch-faces-linux-.tar.gz
      - name: Upload Result
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: hack-stitch-faces-linux-${{ github.event.release.tag_name }}.tar.gz
          asset_name: hack-stitch-faces-linux-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip
  build-macos:
    name: Build (MacOS)
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Fetch Libraries
        shell: bash
        run: |
          pwd
          cd ..
          wget https://github.com/15-466/nest-libs/releases/download/v0.3-pre1/nest-libs-macos-v0.3-pre1.tar.gz -Onest-libs.tar.gz
          tar xfz nest-libs.tar.gz
          ls nest-libs
          pwd
      - name: Build Code
        shell: bash
        run: |
          brew install ftjam
          mkdir -p dist
          jam -j3 -q
      - name: Package
        shell: bash
        run: |
          cp README.md dist
          mv dist "hack-stitch-faces-macos-$TAG_NAME"
          tar cfz "hack-stitch-faces-macos-$TAG_NAME"".tar.gz" "hack-stitch-faces-macos-$TAG_NAME"
          ls
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: hack-stitch-faces-macos-
          path: hack-stitch-faces-macos-
      - name: Upload Result
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: hack-stitch-faces-macos-${{ github.event.release.tag_name }}.tar.gz
          asset_name: hack-stitch-faces-macos-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip
